//unit style var
$height: 50px;
$pdValue: 10px;
$bgColor: #EEE;
$bdColor: #999;
$bdWidth: 1px;

//reset css style
@mixin resetCss {
	margin: 0;
	padding: 0;
}
//clear float 
@mixin clearFix {
	content: "";
	display: block;
	clear: both;
}
//inner style
//@mixin innerStyle {
//	height: $height;
//	background-color: $bgColor;
//	border: $bdWidth solid $dbColor;
//}
//outer style
//@mixin outerStyle {
//	box-sizing: border-box;
//	float: left;
//	padding: $pdValue;
//}
//generate Grid
@mixin generateGrid($src_flag){
	@if $src_flag{
		@for $i from 1 through 12 {
			.col-md-#{$i} {
				width: (100% / 12 * $i);
			}
		}
	}@else{
		@for $i from 1 through 12 {
			.col-sm-#{$i} {
				width: (100% / 12 * $i);
			}
		}
	}
}
//style part 
html body {
	@include resetCss;
}
.grid-container {
	box-sizing: border-box;
	width: 100%;
	padding: 10px;
}
.row:before, .row:after {
	@include clearFix;
}
[class*='col-md'] {
	box-sizing: border-box;
	float: left;
	min-height: $bdWidth;
	width: 16.66%;
	/*our gutter*/
	padding: $pdValue;
}
[class*='col-'] > p {
	background-color: $bgColor;
	@include resetCss;
	height: $height;
	line-height: $height;
	text-align: center;
	color: red;
	border: $bdWidth solid $bdColor;
}
@media (min-width: 769px) {
	@include generateGrid(true);
}
@media all and (max-width: 768px) {
	@include generateGrid(false);
}